/** ЗАДАЧА 47 - Использование метода "reduce" для создания массива
 *
 * 1. Создайте функцию "popularPostsIds" с двумя параметрами "posts" и "minimalComentsQty"
 *
 * 2. Эта функция "popularPostsIds" должна возвращать массив идентификаторов постов сообщений,
 * у которых количество комментариев не меньше "minimalComentsQty"
 */

function popularPostsIds(posts, minimalComentsQty) {
  return posts.reduce(                   //posts.concat() = мы получим новый обновленный массив который будет добавлен postId определенного поста, тоесть метод concat берет два массива соеденяет и возвращает новый массив, и новый массив будет новым значением для переменной postIds и это значение будет передано следующей итерации как postIds и тем самым мы передаем обновленный массив от одной итерации к другой 
    (postsIds, post) =>                  //2й параметр post представляет собой просто елемент массива posts
      post.comments >= minimalComentsQty 
        ? postsIds.concat([post.postId])    //здесь мы дали квадратные скобки для того чтобы сформиировать новый массив который состоит из одного элемента это ID определенного поста у которого кол=во коментариев больше либо равно минимальному кол=во коментариев 
        : postsIds,
    []        //2й аргумент указывает на начальное значение перменной postIds, и это значение будет обновляться и передаваться от одного вызова колбека к следующему, 
  );          //и так по цепочке и финальное значение этого параметра postsIds будет возвращено как результат метода reduce, 
}             //тоесть мы проходимся по всем елементам массива обновляя массив postIds, изначально он пустой а потом мы по одному добавляем в него ID постов

const inputPosts = [
  {
    title: "Как быстро выучить JavaScript?",
    postId: 3421,
    comments: 25,
  },
  {
    title: "Где используется JavaScript?",
    postId: 5216,
    comments: 3,
  },
  {
    title: "Какая разница между React и Angular?",
    postId: 8135,
    comments: 12,
  },
];

console.log(popularPostsIds(inputPosts, 10)); // [3421, 8135]

console.log(popularPostsIds(inputPosts, 15)); // [3421]

console.log(popularPostsIds(inputPosts, 50)); // []
